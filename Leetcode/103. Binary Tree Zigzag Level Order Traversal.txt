class Solution {
    public List<List<Integer>> zigzagLevelOrder(TreeNode root) {
        Deque<TreeNode> stack1 = new LinkedList<>();
        Deque<TreeNode> stack2= new LinkedList<>();
        
        List<List<Integer>> res = new ArrayList<>();
        
        if(root == null)
            return res;
        
        stack1.push(root);
        
        while(stack1.size()>0 || stack2.size()>0){
            List<Integer> levelNodes = new ArrayList<>();
            while(stack1.size()>0){
                TreeNode node = stack1.pop();
                
                if(node.left!=null)
                    stack2.push(node.left);
                if(node.right!=null)
                    stack2.push(node.right);
                
                levelNodes.add(node.val);
            }
            
            if(levelNodes.size()>0)
                res.add(levelNodes);
            
            levelNodes = new ArrayList<>();
            
            while(stack2.size()>0){
                TreeNode node = stack2.pop();
                
                if(node.right!=null)
                    stack1.push(node.right);
                if(node.left!=null)
                    stack1.push(node.left);
                
                levelNodes.add(node.val);
            }
            
            if(levelNodes.size()>0){
                res.add(levelNodes);
            }
        }
        
        return res;
    }
}
