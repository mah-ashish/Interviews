class Solution {
    
    static int start;
    static int len;
    public String longestPalindrome(String s) {
        if (s == null || s.length() < 2) return s;
		start = 0;
		len = 0;
		int n = s.length();
		for(int i=0; i<n; i++)
			i = check(i, s);
		return s.substring(start, start+len);
    }
    
    public int check(int i, String s){
		int left = i-1;
		while(i+1< s.length() && s.charAt(i) == s.charAt(i+1))
			i++;
		int right = i+1;
		while(left>=0 && right < s.length() && s.charAt(left)==s.charAt(right)){
			left--;
			right++;
		}
		if(right-left-1 > len){
			len = right-left-1;
			start = left+1;
		}
		return i;
	}
    
    public static boolean isPalindrome(String s) {
        int len = s.length();
        for (int i = 0; i < len/2; i++) {
            if (s.charAt(i) != s.charAt(len - 1 - i)) {
                return false;
            }
        }
        return true;
    }
    
}
