class Solution {
    public int lengthOfLongestSubstring(String s) {
        HashMap<Character, Integer> map = new HashMap<>();
        int max = 0;
        
        for(int i=0,j=0;i<s.length();i++){
            if(map.containsKey(s.charAt(i))){
                j = Math.max(j, map.get(s.charAt(i))+1);
            }
            max = Math.max(max, i-j+1);
            map.put(s.charAt(i), i);
        }
        
        return max;
    }
}


class Solution {
    public int lengthOfLongestSubstring(String s) {
        int start = 0;
        int maxLength = 0;
        int [] idx = new int[128];
        for (int i = 0; i < idx.length; i++) idx[i]=-1;
        for (int end = 0; end < s.length(); end++) {
            int c = (int) s.charAt(end);
            if (idx[c] >= start) start = idx[c]+1;
            idx[c] = end;
            maxLength = Math.max(maxLength, end-start+1);
        }
        return maxLength;
    }
}


