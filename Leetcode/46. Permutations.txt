class Solution {
    
    public void getPermutations(int nums[], int low, int high, List<List<Integer>> res){
        if(low==high){
            List<Integer> permutation = new ArrayList<>();
            permutation = Arrays.stream(nums).boxed().collect(Collectors.toList());
            res.add(permutation);
            return;
        }
        
        for(int i=low;i<high;i++){
            int temp = nums[i];
            nums[i] = nums[low];
            nums[low] = temp;
            
            getPermutations(nums, low+1, high, res);
            
            temp = nums[i];
            nums[i] = nums[low];
            nums[low] = temp;
            
        }
        
    }
    
    public List<List<Integer>> permute(int[] nums) {
        
        List<List<Integer>> res = new ArrayList<>();
        
        getPermutations(nums, 0, nums.length, res);
        return res;
    }   
}
