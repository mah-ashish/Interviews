/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
class Solution {
    public boolean isCousins(TreeNode root, int x, int y) {
        if (root == null)
            return false;
        Deque<TreeNode> queue = new LinkedList<>();
        queue.offer(root);
        while (!queue.isEmpty()) {
            int n = queue.size();
            boolean xPresent = false;		
            boolean yPresent = false;		
            while(n-- > 0) {
                TreeNode node = queue.poll();
                if (node.val == x) xPresent = true;
                if (node.val == y) yPresent = true;
                if (node.left != null && node.right != null) { 
                    if (node.left.val == x && node.right.val == y) { 
                        return false;
                    }
                    if (node.left.val == y && node.right.val == x) { 
                        return false;
                    }
                }
                if (node.left != null) {
                    queue.offer(node.left);
                }
                if (node.right != null) {
                    queue.offer(node.right);
                }
            }
            if (xPresent && yPresent)  return true;
            if (xPresent || yPresent) return false;
        }
        return false;
    }
}
